

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Fri Jan 24 18:21:29 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F57
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=ENTRY,delta=2
     5                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     6                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	jmp_tab,global,class=ENTRY,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	dabs	1,0x8,8
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F57 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57                           
    58                           	psect	idataBANK1
    59  068                     __pidataBANK1:	
    60                           
    61                           ;initializer for _digits
    62  068  08C0               	retlw	192
    63  069  08F9               	retlw	249
    64  06A  08A4               	retlw	164
    65  06B  08B0               	retlw	176
    66  06C  0899               	retlw	153
    67  06D  0892               	retlw	146
    68  06E  0882               	retlw	130
    69  06F  08D8               	retlw	216
    70  070  0880               	retlw	128
    71  071  0890               	retlw	144
    72  072  0888               	retlw	136
    73  073  0883               	retlw	131
    74  074  08C6               	retlw	198
    75  075  08A1               	retlw	161
    76  076  0886               	retlw	134
    77  077  088E               	retlw	142
    78  0006                     _PORTB	set	6
    79  0007                     _PORTC	set	7
    80  0005                     _PORTA	set	5
    81  0007                     _TRISC	set	7
    82  0006                     _TRISB	set	6
    83  0005                     _TRISA	set	5
    84  002A                     _RA2	set	42
    85  0029                     _RA1	set	41
    86  0028                     _RA0	set	40
    87  002B                     _RA3	set	43
    88                           
    89                           ; #config settings
    90  0000                     
    91                           	psect	cinit
    92  003                     start_initialization:	
    93  003                     __initialization:	
    94                           
    95                           ; Initialize objects allocated to BANK1
    96  003  05A4               	bsf	4,5	;FSR5=1, select bank1
    97  004  04C3  04A3  0968  04C3  04A3  	fcall	__pidataBANK1	;fetch initializer
    98  009  0030               	movwf	__pdataBANK1& (0+31)
    99  00A  04C3  04A3  0969  04C3  04A3  	fcall	__pidataBANK1+1	;fetch initializer
   100  00F  0031               	movwf	(__pdataBANK1+1)& (0+31)
   101  010  04C3  04A3  096A  04C3  04A3  	fcall	__pidataBANK1+2	;fetch initializer
   102  015  0032               	movwf	(__pdataBANK1+2)& (0+31)
   103  016  04C3  04A3  096B  04C3  04A3  	fcall	__pidataBANK1+3	;fetch initializer
   104  01B  0033               	movwf	(__pdataBANK1+3)& (0+31)
   105  01C  04C3  04A3  096C  04C3  04A3  	fcall	__pidataBANK1+4	;fetch initializer
   106  021  0034               	movwf	(__pdataBANK1+4)& (0+31)
   107  022  04C3  04A3  096D  04C3  04A3  	fcall	__pidataBANK1+5	;fetch initializer
   108  027  0035               	movwf	(__pdataBANK1+5)& (0+31)
   109  028  04C3  04A3  096E  04C3  04A3  	fcall	__pidataBANK1+6	;fetch initializer
   110  02D  0036               	movwf	(__pdataBANK1+6)& (0+31)
   111  02E  04C3  04A3  096F  04C3  04A3  	fcall	__pidataBANK1+7	;fetch initializer
   112  033  0037               	movwf	(__pdataBANK1+7)& (0+31)
   113  034  04C3  04A3  0970  04C3  04A3  	fcall	__pidataBANK1+8	;fetch initializer
   114  039  0038               	movwf	(__pdataBANK1+8)& (0+31)
   115  03A  04C3  04A3  0971  04C3  04A3  	fcall	__pidataBANK1+9	;fetch initializer
   116  03F  0039               	movwf	(__pdataBANK1+9)& (0+31)
   117  040  04C3  04A3  0972  04C3  04A3  	fcall	__pidataBANK1+10	;fetch initializer
   118  045  003A               	movwf	(__pdataBANK1+10)& (0+31)
   119  046  04C3  04A3  0973  04C3  04A3  	fcall	__pidataBANK1+11	;fetch initializer
   120  04B  003B               	movwf	(__pdataBANK1+11)& (0+31)
   121  04C  04C3  04A3  0974  04C3  04A3  	fcall	__pidataBANK1+12	;fetch initializer
   122  051  003C               	movwf	(__pdataBANK1+12)& (0+31)
   123  052  04C3  04A3  0975  04C3  04A3  	fcall	__pidataBANK1+13	;fetch initializer
   124  057  003D               	movwf	(__pdataBANK1+13)& (0+31)
   125  058  04C3  04A3  0976  04C3  04A3  	fcall	__pidataBANK1+14	;fetch initializer
   126  05D  003E               	movwf	(__pdataBANK1+14)& (0+31)
   127  05E  04C3  04A3  0977  04C3  04A3  	fcall	__pidataBANK1+15	;fetch initializer
   128  063  003F               	movwf	(__pdataBANK1+15)& (0+31)
   129  064                     end_of_initialization:	
   130                           ;End of C runtime variable initialization code
   131                           
   132  064                     __end_of__initialization:	
   133  064  0064               	clrf	4
   134  065  04C3  04A3  0B1D   	ljmp	_main	;jump to C main() function
   135                           
   136                           	psect	dataBANK1
   137  030                     __pdataBANK1:	
   138  030                     _digits:	
   139  030                     	ds	16
   140                           
   141                           	psect	cstackBANK0
   142  010                     __pcstackBANK0:	
   143  010                     ?_main:	
   144  010                     ?___awdiv:	
   145                           ; 2 bytes @ 0x0
   146                           
   147  010                     ?___awmod:	
   148                           ; 2 bytes @ 0x0
   149                           
   150  010                     ___awdiv@divisor:	
   151                           ; 2 bytes @ 0x0
   152                           
   153  010                     ___awmod@divisor:	
   154                           ; 2 bytes @ 0x0
   155                           
   156                           
   157                           ; 2 bytes @ 0x0
   158  010                     	ds	2
   159  012                     ___awdiv@dividend:	
   160  012                     ___awmod@dividend:	
   161                           ; 2 bytes @ 0x2
   162                           
   163                           
   164                           ; 2 bytes @ 0x2
   165  012                     	ds	2
   166  014                     ___awdiv@counter:	
   167  014                     ___awmod@counter:	
   168                           ; 1 bytes @ 0x4
   169                           
   170                           
   171                           ; 1 bytes @ 0x4
   172  014                     	ds	1
   173  015                     ___awdiv@sign:	
   174  015                     ___awmod@sign:	
   175                           ; 1 bytes @ 0x5
   176                           
   177                           
   178                           ; 1 bytes @ 0x5
   179  015                     	ds	1
   180  016                     ___awdiv@quotient:	
   181                           
   182                           ; 2 bytes @ 0x6
   183  016                     	ds	2
   184  018                     ??_main:	
   185                           
   186                           ; 1 bytes @ 0x8
   187  018                     	ds	2
   188  01A                     main@t:	
   189                           
   190                           ; 2 bytes @ 0xA
   191  01A                     	ds	2
   192                           
   193                           	psect	cstackCOMMON
   194  000                     __pcstackCOMMON:	
   195  000                     ??___awdiv:	
   196  000                     ??___awmod:	
   197                           ; 1 bytes @ 0x0
   198                           
   199                           
   200                           	psect	maintext
   201  11D                     __pmaintext:	
   202                           ; 1 bytes @ 0x0
   203 ;;
   204 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   205 ;;
   206 ;; *************** function _main *****************
   207 ;; Defined at:
   208 ;;		line 24 in file "main.c"
   209 ;; Parameters:    Size  Location     Type
   210 ;;		None
   211 ;; Auto vars:     Size  Location     Type
   212 ;;  t               2   10[BANK0 ] int 
   213 ;; Return value:  Size  Location     Type
   214 ;;                  2   28[None  ] int 
   215 ;; Registers used:
   216 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+6, btemp+7, pclath, cstack
   217 ;; Tracked objects:
   218 ;;		On entry : B00/0
   219 ;;		On exit  : 0/0
   220 ;;		Unchanged: 0/0
   221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   222 ;;      Params:         0       0       0       0       0
   223 ;;      Locals:         0       2       0       0       0
   224 ;;      Temps:          0       2       0       0       0
   225 ;;      Totals:         0       4       0       0       0
   226 ;;Total ram usage:        4 bytes
   227 ;; Hardware stack levels required when called:    1
   228 ;; This function calls:
   229 ;;		___awdiv
   230 ;;		___awmod
   231 ;; This function is called by:
   232 ;;		Startup code after reset
   233 ;; This function uses a non-reentrant model
   234 ;;
   235                           
   236                           
   237                           ;psect for function _main
   238  11D                     _main:	
   239  11D                     l768:	
   240                           ;incstack = 0
   241                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+0+btemp+6+btemp+7+pclath+cstack]
   242                           
   243                           
   244                           ;main.c: 26:     int t;;main.c: 28:     TRISA = 0x08;
   245  11D  0C08               	movlw	8
   246  11E  0005               	tris	5
   247                           
   248                           ;main.c: 29:     TRISB = 0xFF;
   249  11F  0CFF               	movlw	255
   250  120  0006               	tris	6
   251                           
   252                           ;main.c: 30:     TRISC = 0x00;
   253  121  0C00               	movlw	0
   254  122  0007               	tris	7
   255  123                     l770:	
   256                           
   257                           ;main.c: 32:     PORTA = 0x00;
   258  123  04A4               	bcf	4,5	;FSR5=0, select bank0
   259  124  04C4               	bcf	4,6	;FSR6=0, select bank0
   260  125  0065               	clrf	5	;volatile
   261  126                     l772:	
   262                           
   263                           ;main.c: 33:     PORTC = 0xFF;
   264  126  0CFF               	movlw	255
   265  127  0027               	movwf	7	;volatile
   266  128                     l774:	
   267                           
   268                           ;main.c: 36:     {;main.c: 37:         if(RA3 == 1)
   269  128  0765               	btfss	5,3	;volatile
   270  129  0B2B               	goto	u411
   271  12A  0B2C               	goto	u410
   272  12B                     u411:	
   273  12B  0B71               	goto	l794
   274  12C                     u410:	
   275  12C                     l776:	
   276                           
   277                           ;main.c: 38:         {;main.c: 39:             t = PORTB;
   278  12C  0206               	movf	6,w	;volatile
   279  12D  002E               	movwf	btemp+6
   280  12E  006F               	clrf	btemp+7
   281  12F  020E               	movf	wtemp3,w
   282  130  003A               	movwf	main@t
   283  131  020F               	movf	wtemp3+1,w
   284  132  003B               	movwf	main@t+1
   285  133                     l778:	
   286                           
   287                           ;main.c: 42:             RA0 = 1;
   288  133  0505               	bsf	5,0	;volatile
   289  134                     l780:	
   290                           
   291                           ;main.c: 45:             PORTC = digits[t >> 4];
   292  134  021B               	movf	main@t+1,w
   293  135  002F               	movwf	btemp+7
   294  136  021A               	movf	main@t,w
   295  137  002E               	movwf	btemp+6
   296  138  0C04               	movlw	4
   297  139  0028               	movwf	btemp
   298  13A                     u425:	
   299  13A  034F               	rlf	btemp+7,w
   300  13B  032F               	rrf	btemp+7,f
   301  13C  032E               	rrf	btemp+6,f
   302  13D  02E8               	decfsz	btemp,f
   303  13E  0B3A               	goto	u425
   304  13F  020E               	movf	wtemp3,w
   305  140  0028               	movwf	btemp
   306  141  0C30               	movlw	low (_digits| 0)
   307  142  01C8               	addwf	btemp,w
   308  143  0024               	movwf	4
   309  144  0200               	movf	0,w
   310  145  04A4               	bcf	4,5	;FSR5=0, select bank0
   311  146  04C4               	bcf	4,6	;FSR6=0, select bank0
   312  147  0027               	movwf	7	;volatile
   313  148                     l782:	
   314                           
   315                           ;main.c: 46:             RA1 = 0;
   316  148  0425               	bcf	5,1	;volatile
   317  149                     l784:	
   318                           
   319                           ;main.c: 47:             _delay((unsigned long)((5)*(4000000/4000.0)));
   320  149  0C07               	movlw	7
   321  14A  04A4               	bcf	4,5	;FSR5=0, select bank0
   322  14B  04C4               	bcf	4,6	;FSR6=0, select bank0
   323  14C  0039               	movwf	??_main+1
   324  14D  0C7C               	movlw	124
   325  14E  0038               	movwf	??_main
   326  14F                     u437:	
   327  14F  02F8               	decfsz	??_main,f
   328  150  0B4F               	goto	u437
   329  151  02F9               	decfsz	??_main+1,f
   330  152  0B4F               	goto	u437
   331  153  0000               	nop
   332  154                     l786:	
   333                           
   334                           ;main.c: 48:             RA1 = 1;
   335  154  04A4               	bcf	4,5	;FSR5=0, select bank0
   336  155  04C4               	bcf	4,6	;FSR6=0, select bank0
   337  156  0525               	bsf	5,1	;volatile
   338  157                     l788:	
   339                           
   340                           ;main.c: 52:             PORTC = digits[t & 0x0F];
   341  157  021A               	movf	main@t,w
   342  158  0E0F               	andlw	15
   343  159  0028               	movwf	btemp
   344  15A  0C30               	movlw	low (_digits| 0)
   345  15B  01C8               	addwf	btemp,w
   346  15C  0024               	movwf	4
   347  15D  0200               	movf	0,w
   348  15E  04A4               	bcf	4,5	;FSR5=0, select bank0
   349  15F  04C4               	bcf	4,6	;FSR6=0, select bank0
   350  160  0027               	movwf	7	;volatile
   351                           
   352                           ;main.c: 53:             RA2 = 0;
   353  161  0445               	bcf	5,2	;volatile
   354  162                     l790:	
   355                           
   356                           ;main.c: 54:             _delay((unsigned long)((5)*(4000000/4000.0)));
   357  162  0C07               	movlw	7
   358  163  04A4               	bcf	4,5	;FSR5=0, select bank0
   359  164  04C4               	bcf	4,6	;FSR6=0, select bank0
   360  165  0039               	movwf	??_main+1
   361  166  0C7C               	movlw	124
   362  167  0038               	movwf	??_main
   363  168                     u447:	
   364  168  02F8               	decfsz	??_main,f
   365  169  0B68               	goto	u447
   366  16A  02F9               	decfsz	??_main+1,f
   367  16B  0B68               	goto	u447
   368  16C  0000               	nop
   369  16D                     l792:	
   370                           
   371                           ;main.c: 55:             RA2 = 1;
   372  16D  04A4               	bcf	4,5	;FSR5=0, select bank0
   373  16E  04C4               	bcf	4,6	;FSR6=0, select bank0
   374  16F  0545               	bsf	5,2	;volatile
   375                           
   376                           ;main.c: 57:         }
   377  170  0B28               	goto	l774
   378  171                     l794:	
   379                           
   380                           ;main.c: 59:         {;main.c: 60:             t = PORTB;
   381  171  0206               	movf	6,w	;volatile
   382  172  002E               	movwf	btemp+6
   383  173  006F               	clrf	btemp+7
   384  174  020E               	movf	wtemp3,w
   385  175  003A               	movwf	main@t
   386  176  020F               	movf	wtemp3+1,w
   387  177  003B               	movwf	main@t+1
   388  178                     l796:	
   389                           
   390                           ;main.c: 63:             PORTC = digits[t / 100];
   391  178  0C64               	movlw	100
   392  179  0030               	movwf	___awdiv@divisor
   393  17A  0C00               	movlw	0
   394  17B  0031               	movwf	___awdiv@divisor+1
   395  17C  021B               	movf	main@t+1,w
   396  17D  0033               	movwf	___awdiv@dividend+1
   397  17E  021A               	movf	main@t,w
   398  17F  0032               	movwf	___awdiv@dividend
   399  180  04C3  04A3  097B  04C3  04A3  	fcall	entry____awdiv
   400  185  04A4               	bcf	4,5	;FSR5=0, select bank0
   401  186  04C4               	bcf	4,6	;FSR6=0, select bank0
   402  187  0210               	movf	?___awdiv,w
   403  188  002E               	movwf	wtemp3
   404  189  0211               	movf	?___awdiv+1,w
   405  18A  002F               	movwf	wtemp3+1
   406  18B  020E               	movf	wtemp3,w
   407  18C  0028               	movwf	btemp
   408  18D  0C30               	movlw	low (_digits| 0)
   409  18E  01C8               	addwf	btemp,w
   410  18F  0024               	movwf	4
   411  190  0200               	movf	0,w
   412  191  04A4               	bcf	4,5	;FSR5=0, select bank0
   413  192  04C4               	bcf	4,6	;FSR6=0, select bank0
   414  193  0027               	movwf	7	;volatile
   415  194                     l798:	
   416                           
   417                           ;main.c: 64:             t = t % 100;
   418  194  0C64               	movlw	100
   419  195  0030               	movwf	___awmod@divisor
   420  196  0C00               	movlw	0
   421  197  0031               	movwf	___awmod@divisor+1
   422  198  021B               	movf	main@t+1,w
   423  199  0033               	movwf	___awmod@dividend+1
   424  19A  021A               	movf	main@t,w
   425  19B  0032               	movwf	___awmod@dividend
   426  19C  04C3  04A3  0978  04C3  04A3  	fcall	entry____awmod
   427  1A1  04A4               	bcf	4,5	;FSR5=0, select bank0
   428  1A2  04C4               	bcf	4,6	;FSR6=0, select bank0
   429  1A3  0211               	movf	?___awmod+1,w
   430  1A4  003B               	movwf	main@t+1
   431  1A5  0210               	movf	?___awmod,w
   432  1A6  003A               	movwf	main@t
   433  1A7                     l800:	
   434                           
   435                           ;main.c: 65:             RA0 = 0;
   436  1A7  0405               	bcf	5,0	;volatile
   437  1A8                     l802:	
   438                           
   439                           ;main.c: 66:             _delay((unsigned long)((5)*(4000000/4000.0)));
   440  1A8  0C07               	movlw	7
   441  1A9  04A4               	bcf	4,5	;FSR5=0, select bank0
   442  1AA  04C4               	bcf	4,6	;FSR6=0, select bank0
   443  1AB  0039               	movwf	??_main+1
   444  1AC  0C7C               	movlw	124
   445  1AD  0038               	movwf	??_main
   446  1AE                     u457:	
   447  1AE  02F8               	decfsz	??_main,f
   448  1AF  0BAE               	goto	u457
   449  1B0  02F9               	decfsz	??_main+1,f
   450  1B1  0BAE               	goto	u457
   451  1B2  0000               	nop
   452  1B3                     l804:	
   453                           
   454                           ;main.c: 67:             RA0 = 1;
   455  1B3  04A4               	bcf	4,5	;FSR5=0, select bank0
   456  1B4  04C4               	bcf	4,6	;FSR6=0, select bank0
   457  1B5  0505               	bsf	5,0	;volatile
   458  1B6                     l806:	
   459                           
   460                           ;main.c: 71:             PORTC = digits[t / 10];
   461  1B6  0C0A               	movlw	10
   462  1B7  0030               	movwf	___awdiv@divisor
   463  1B8  0C00               	movlw	0
   464  1B9  0031               	movwf	___awdiv@divisor+1
   465  1BA  021B               	movf	main@t+1,w
   466  1BB  0033               	movwf	___awdiv@dividend+1
   467  1BC  021A               	movf	main@t,w
   468  1BD  0032               	movwf	___awdiv@dividend
   469  1BE  04C3  04A3  097B  04C3  04A3  	fcall	entry____awdiv
   470  1C3  04A4               	bcf	4,5	;FSR5=0, select bank0
   471  1C4  04C4               	bcf	4,6	;FSR6=0, select bank0
   472  1C5  0210               	movf	?___awdiv,w
   473  1C6  002E               	movwf	wtemp3
   474  1C7  0211               	movf	?___awdiv+1,w
   475  1C8  002F               	movwf	wtemp3+1
   476  1C9  020E               	movf	wtemp3,w
   477  1CA  0028               	movwf	btemp
   478  1CB  0C30               	movlw	low (_digits| 0)
   479  1CC  01C8               	addwf	btemp,w
   480  1CD  0024               	movwf	4
   481  1CE  0200               	movf	0,w
   482  1CF  04A4               	bcf	4,5	;FSR5=0, select bank0
   483  1D0  04C4               	bcf	4,6	;FSR6=0, select bank0
   484  1D1  0027               	movwf	7	;volatile
   485  1D2                     l808:	
   486                           
   487                           ;main.c: 72:             t = t % 10;
   488  1D2  0C0A               	movlw	10
   489  1D3  0030               	movwf	___awmod@divisor
   490  1D4  0C00               	movlw	0
   491  1D5  0031               	movwf	___awmod@divisor+1
   492  1D6  021B               	movf	main@t+1,w
   493  1D7  0033               	movwf	___awmod@dividend+1
   494  1D8  021A               	movf	main@t,w
   495  1D9  0032               	movwf	___awmod@dividend
   496  1DA  04C3  04A3  0978  04C3  04A3  	fcall	entry____awmod
   497  1DF  04A4               	bcf	4,5	;FSR5=0, select bank0
   498  1E0  04C4               	bcf	4,6	;FSR6=0, select bank0
   499  1E1  0211               	movf	?___awmod+1,w
   500  1E2  003B               	movwf	main@t+1
   501  1E3  0210               	movf	?___awmod,w
   502  1E4  003A               	movwf	main@t
   503  1E5                     l810:	
   504                           
   505                           ;main.c: 73:             RA1 = 0;
   506  1E5  0425               	bcf	5,1	;volatile
   507  1E6                     l812:	
   508                           
   509                           ;main.c: 74:             _delay((unsigned long)((5)*(4000000/4000.0)));
   510  1E6  0C07               	movlw	7
   511  1E7  04A4               	bcf	4,5	;FSR5=0, select bank0
   512  1E8  04C4               	bcf	4,6	;FSR6=0, select bank0
   513  1E9  0039               	movwf	??_main+1
   514  1EA  0C7C               	movlw	124
   515  1EB  0038               	movwf	??_main
   516  1EC                     u467:	
   517  1EC  02F8               	decfsz	??_main,f
   518  1ED  0BEC               	goto	u467
   519  1EE  02F9               	decfsz	??_main+1,f
   520  1EF  0BEC               	goto	u467
   521  1F0  0000               	nop
   522  1F1                     l814:	
   523                           
   524                           ;main.c: 75:             RA1 = 1;
   525  1F1  04A4               	bcf	4,5	;FSR5=0, select bank0
   526  1F2  04C4               	bcf	4,6	;FSR6=0, select bank0
   527  1F3  0525               	bsf	5,1	;volatile
   528  1F4                     l816:	
   529                           
   530                           ;main.c: 79:             PORTC = digits[t];
   531  1F4  0C30               	movlw	low (_digits| 0)
   532  1F5  01DA               	addwf	main@t,w
   533  1F6  0024               	movwf	4
   534  1F7  0200               	movf	0,w
   535  1F8  04A4               	bcf	4,5	;FSR5=0, select bank0
   536  1F9  04C4               	bcf	4,6	;FSR6=0, select bank0
   537  1FA  0027               	movwf	7	;volatile
   538  1FB                     l818:	
   539                           
   540                           ;main.c: 80:             RA2 = 0;
   541  1FB  0445               	bcf	5,2	;volatile
   542  1FC  0B62               	goto	l790
   543  1FD  04C3  04A3  0A00   	ljmp	start
   544  200                     __end_of_main:	
   545                           
   546                           	psect	text1
   547  39D                     __ptext1:	
   548 ;; *************** function ___awmod *****************
   549 ;; Defined at:
   550 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
   551 ;; Parameters:    Size  Location     Type
   552 ;;  divisor         2    0[BANK0 ] int 
   553 ;;  dividend        2    2[BANK0 ] int 
   554 ;; Auto vars:     Size  Location     Type
   555 ;;  sign            1    5[BANK0 ] unsigned char 
   556 ;;  counter         1    4[BANK0 ] unsigned char 
   557 ;; Return value:  Size  Location     Type
   558 ;;                  2    0[BANK0 ] int 
   559 ;; Registers used:
   560 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+6, btemp+7
   561 ;; Tracked objects:
   562 ;;		On entry : 0/0
   563 ;;		On exit  : 0/0
   564 ;;		Unchanged: 0/0
   565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   566 ;;      Params:         0       4       0       0       0
   567 ;;      Locals:         0       2       0       0       0
   568 ;;      Temps:          0       0       0       0       0
   569 ;;      Totals:         0       6       0       0       0
   570 ;;Total ram usage:        6 bytes
   571 ;; Hardware stack levels used:    1
   572 ;; This function calls:
   573 ;;		Nothing
   574 ;; This function is called by:
   575 ;;		_main
   576 ;; This function uses a non-reentrant model
   577 ;;
   578                           
   579                           
   580                           ;psect for function ___awmod
   581  39D                     ___awmod:	
   582  39D                     l730:	
   583  39D  04A4               	bcf	4,5	;FSR5=0, select bank0
   584  39E  04C4               	bcf	4,6	;FSR6=0, select bank0
   585  39F  0075               	clrf	___awmod@sign
   586  3A0                     l732:	
   587  3A0  07F3               	btfss	___awmod@dividend+1,7
   588  3A1  0BA3               	goto	u321
   589  3A2  0BA4               	goto	u320
   590  3A3                     u321:	
   591  3A3  0BAB               	goto	l738
   592  3A4                     u320:	
   593  3A4                     l734:	
   594  3A4  0272               	comf	___awmod@dividend,f
   595  3A5  0273               	comf	___awmod@dividend+1,f
   596  3A6  02B2               	incf	___awmod@dividend,f
   597  3A7  0643               	skipnz
   598  3A8  02B3               	incf	___awmod@dividend+1,f
   599  3A9                     l736:	
   600  3A9  0075               	clrf	___awmod@sign
   601  3AA  02B5               	incf	___awmod@sign,f
   602  3AB                     l738:	
   603  3AB  07F1               	btfss	___awmod@divisor+1,7
   604  3AC  0BAE               	goto	u331
   605  3AD  0BAF               	goto	u330
   606  3AE                     u331:	
   607  3AE  0BB4               	goto	l742
   608  3AF                     u330:	
   609  3AF                     l740:	
   610  3AF  0270               	comf	___awmod@divisor,f
   611  3B0  0271               	comf	___awmod@divisor+1,f
   612  3B1  02B0               	incf	___awmod@divisor,f
   613  3B2  0643               	skipnz
   614  3B3  02B1               	incf	___awmod@divisor+1,f
   615  3B4                     l742:	
   616  3B4  0210               	movf	___awmod@divisor,w
   617  3B5  0111               	iorwf	___awmod@divisor+1,w
   618  3B6  0643               	btfsc	3,2
   619  3B7  0BB9               	goto	u341
   620  3B8  0BBA               	goto	u340
   621  3B9                     u341:	
   622  3B9  0BF1               	goto	l760
   623  3BA                     u340:	
   624  3BA                     l744:	
   625  3BA  0074               	clrf	___awmod@counter
   626  3BB  02B4               	incf	___awmod@counter,f
   627  3BC  0BC8               	goto	l750
   628  3BD                     l746:	
   629  3BD  0C01               	movlw	1
   630  3BE  0028               	movwf	btemp
   631  3BF                     u355:	
   632  3BF  0403               	clrc
   633  3C0  0370               	rlf	___awmod@divisor,f
   634  3C1  0371               	rlf	___awmod@divisor+1,f
   635  3C2  02E8               	decfsz	btemp,f
   636  3C3  0BBF               	goto	u355
   637  3C4                     l748:	
   638  3C4  0C01               	movlw	1
   639  3C5  002F               	movwf	btemp+7
   640  3C6  020F               	movf	btemp+7,w
   641  3C7  01F4               	addwf	___awmod@counter,f
   642  3C8                     l750:	
   643  3C8  07F1               	btfss	___awmod@divisor+1,7
   644  3C9  0BCB               	goto	u361
   645  3CA  0BCC               	goto	u360
   646  3CB                     u361:	
   647  3CB  0BBD               	goto	l746
   648  3CC                     u360:	
   649  3CC                     l752:	
   650  3CC  0211               	movf	___awmod@divisor+1,w
   651  3CD  002F               	movwf	btemp+7
   652  3CE  0210               	movf	___awmod@divisor,w
   653  3CF  002E               	movwf	btemp+6
   654  3D0  020F               	movf	wtemp3+1,w
   655  3D1  0093               	subwf	___awmod@dividend+1,w
   656  3D2  0743               	skipz
   657  3D3  0BD6               	goto	u375
   658  3D4  020E               	movf	wtemp3,w
   659  3D5  0092               	subwf	___awmod@dividend,w
   660  3D6                     u375:	
   661  3D6  0703               	skipc
   662  3D7  0BD9               	goto	u371
   663  3D8  0BDA               	goto	u370
   664  3D9                     u371:	
   665  3D9  0BE4               	goto	l756
   666  3DA                     u370:	
   667  3DA                     l754:	
   668  3DA  0211               	movf	___awmod@divisor+1,w
   669  3DB  002F               	movwf	btemp+7
   670  3DC  0210               	movf	___awmod@divisor,w
   671  3DD  002E               	movwf	btemp+6
   672  3DE  020E               	movf	wtemp3,w
   673  3DF  00B2               	subwf	___awmod@dividend,f
   674  3E0  020F               	movf	wtemp3+1,w
   675  3E1  0703               	skipc
   676  3E2  00F3               	decf	___awmod@dividend+1,f
   677  3E3  00B3               	subwf	___awmod@dividend+1,f
   678  3E4                     l756:	
   679  3E4  0C01               	movlw	1
   680  3E5  0028               	movwf	btemp
   681  3E6                     u385:	
   682  3E6  0403               	clrc
   683  3E7  0331               	rrf	___awmod@divisor+1,f
   684  3E8  0330               	rrf	___awmod@divisor,f
   685  3E9  02E8               	decfsz	btemp,f
   686  3EA  0BE6               	goto	u385
   687  3EB                     l758:	
   688  3EB  0C01               	movlw	1
   689  3EC  00B4               	subwf	___awmod@counter,f
   690  3ED  0743               	btfss	3,2
   691  3EE  0BF0               	goto	u391
   692  3EF  0BF1               	goto	u390
   693  3F0                     u391:	
   694  3F0  0BCC               	goto	l752
   695  3F1                     u390:	
   696  3F1                     l760:	
   697  3F1  0215               	movf	___awmod@sign,w
   698  3F2  0643               	btfsc	3,2
   699  3F3  0BF5               	goto	u401
   700  3F4  0BF6               	goto	u400
   701  3F5                     u401:	
   702  3F5  0BFB               	goto	l764
   703  3F6                     u400:	
   704  3F6                     l762:	
   705  3F6  0272               	comf	___awmod@dividend,f
   706  3F7  0273               	comf	___awmod@dividend+1,f
   707  3F8  02B2               	incf	___awmod@dividend,f
   708  3F9  0643               	skipnz
   709  3FA  02B3               	incf	___awmod@dividend+1,f
   710  3FB                     l764:	
   711  3FB  0213               	movf	___awmod@dividend+1,w
   712  3FC  0031               	movwf	?___awmod+1
   713  3FD  0212               	movf	___awmod@dividend,w
   714  3FE  0030               	movwf	?___awmod
   715  3FF                     l204:	
   716  3FF  0800               	retlw	0
   717  400                     __end_of___awmod:	
   718                           
   719                           	psect	jmp_tab
   720  078                     __pjmp_tab:	
   721                           ;incstack = 0
   722                           ; Regs used in ___awmod: [wreg-fsr0h+status,2-btemp+0+btemp+6+btemp+7]
   723                           
   724  078                     entry____awmod:	
   725  078  04C3  05A3  0B9D   	ljmp	___awmod
   726  07B                     entry____awdiv:	
   727                           ;incstack = 0
   728                           ; Regs used in ___awdiv: [wreg-fsr0h+status,2-btemp+0+btemp+6+btemp+7]
   729                           
   730  07B  04C3  04A3  0AAC   	ljmp	___awdiv
   731                           
   732                           	psect	text2
   733  0AC                     __ptext2:	
   734 ;; *************** function ___awdiv *****************
   735 ;; Defined at:
   736 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
   737 ;; Parameters:    Size  Location     Type
   738 ;;  divisor         2    0[BANK0 ] int 
   739 ;;  dividend        2    2[BANK0 ] int 
   740 ;; Auto vars:     Size  Location     Type
   741 ;;  quotient        2    6[BANK0 ] int 
   742 ;;  sign            1    5[BANK0 ] unsigned char 
   743 ;;  counter         1    4[BANK0 ] unsigned char 
   744 ;; Return value:  Size  Location     Type
   745 ;;                  2    0[BANK0 ] int 
   746 ;; Registers used:
   747 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+6, btemp+7
   748 ;; Tracked objects:
   749 ;;		On entry : 0/0
   750 ;;		On exit  : 0/0
   751 ;;		Unchanged: 0/0
   752 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   753 ;;      Params:         0       4       0       0       0
   754 ;;      Locals:         0       4       0       0       0
   755 ;;      Temps:          0       0       0       0       0
   756 ;;      Totals:         0       8       0       0       0
   757 ;;Total ram usage:        8 bytes
   758 ;; Hardware stack levels used:    1
   759 ;; This function calls:
   760 ;;		Nothing
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           
   766                           
   767                           ;psect for function ___awdiv
   768  0AC                     ___awdiv:	
   769  0AC                     l684:	
   770  0AC  04A4               	bcf	4,5	;FSR5=0, select bank0
   771  0AD  04C4               	bcf	4,6	;FSR6=0, select bank0
   772  0AE  0075               	clrf	___awdiv@sign
   773  0AF                     l686:	
   774  0AF  07F1               	btfss	___awdiv@divisor+1,7
   775  0B0  0AB2               	goto	u221
   776  0B1  0AB3               	goto	u220
   777  0B2                     u221:	
   778  0B2  0ABA               	goto	l692
   779  0B3                     u220:	
   780  0B3                     l688:	
   781  0B3  0270               	comf	___awdiv@divisor,f
   782  0B4  0271               	comf	___awdiv@divisor+1,f
   783  0B5  02B0               	incf	___awdiv@divisor,f
   784  0B6  0643               	skipnz
   785  0B7  02B1               	incf	___awdiv@divisor+1,f
   786  0B8                     l690:	
   787  0B8  0075               	clrf	___awdiv@sign
   788  0B9  02B5               	incf	___awdiv@sign,f
   789  0BA                     l692:	
   790  0BA  07F3               	btfss	___awdiv@dividend+1,7
   791  0BB  0ABD               	goto	u231
   792  0BC  0ABE               	goto	u230
   793  0BD                     u231:	
   794  0BD  0AC7               	goto	l698
   795  0BE                     u230:	
   796  0BE                     l694:	
   797  0BE  0272               	comf	___awdiv@dividend,f
   798  0BF  0273               	comf	___awdiv@dividend+1,f
   799  0C0  02B2               	incf	___awdiv@dividend,f
   800  0C1  0643               	skipnz
   801  0C2  02B3               	incf	___awdiv@dividend+1,f
   802  0C3                     l696:	
   803  0C3  0C01               	movlw	1
   804  0C4  002F               	movwf	btemp+7
   805  0C5  020F               	movf	btemp+7,w
   806  0C6  01B5               	xorwf	___awdiv@sign,f
   807  0C7                     l698:	
   808  0C7  0076               	clrf	___awdiv@quotient
   809  0C8  0077               	clrf	___awdiv@quotient+1
   810  0C9                     l700:	
   811  0C9  0210               	movf	___awdiv@divisor,w
   812  0CA  0111               	iorwf	___awdiv@divisor+1,w
   813  0CB  0643               	btfsc	3,2
   814  0CC  0ACE               	goto	u241
   815  0CD  0ACF               	goto	u240
   816  0CE                     u241:	
   817  0CE  0B0E               	goto	l722
   818  0CF                     u240:	
   819  0CF                     l702:	
   820  0CF  0074               	clrf	___awdiv@counter
   821  0D0  02B4               	incf	___awdiv@counter,f
   822  0D1  0ADD               	goto	l708
   823  0D2                     l704:	
   824  0D2  0C01               	movlw	1
   825  0D3  0028               	movwf	btemp
   826  0D4                     u255:	
   827  0D4  0403               	clrc
   828  0D5  0370               	rlf	___awdiv@divisor,f
   829  0D6  0371               	rlf	___awdiv@divisor+1,f
   830  0D7  02E8               	decfsz	btemp,f
   831  0D8  0AD4               	goto	u255
   832  0D9                     l706:	
   833  0D9  0C01               	movlw	1
   834  0DA  002F               	movwf	btemp+7
   835  0DB  020F               	movf	btemp+7,w
   836  0DC  01F4               	addwf	___awdiv@counter,f
   837  0DD                     l708:	
   838  0DD  07F1               	btfss	___awdiv@divisor+1,7
   839  0DE  0AE0               	goto	u261
   840  0DF  0AE1               	goto	u260
   841  0E0                     u261:	
   842  0E0  0AD2               	goto	l704
   843  0E1                     u260:	
   844  0E1                     l710:	
   845  0E1  0C01               	movlw	1
   846  0E2  0028               	movwf	btemp
   847  0E3                     u275:	
   848  0E3  0403               	clrc
   849  0E4  0376               	rlf	___awdiv@quotient,f
   850  0E5  0377               	rlf	___awdiv@quotient+1,f
   851  0E6  02E8               	decfsz	btemp,f
   852  0E7  0AE3               	goto	u275
   853  0E8                     l712:	
   854  0E8  0211               	movf	___awdiv@divisor+1,w
   855  0E9  002F               	movwf	btemp+7
   856  0EA  0210               	movf	___awdiv@divisor,w
   857  0EB  002E               	movwf	btemp+6
   858  0EC  020F               	movf	wtemp3+1,w
   859  0ED  0093               	subwf	___awdiv@dividend+1,w
   860  0EE  0743               	skipz
   861  0EF  0AF2               	goto	u285
   862  0F0  020E               	movf	wtemp3,w
   863  0F1  0092               	subwf	___awdiv@dividend,w
   864  0F2                     u285:	
   865  0F2  0703               	skipc
   866  0F3  0AF5               	goto	u281
   867  0F4  0AF6               	goto	u280
   868  0F5                     u281:	
   869  0F5  0B01               	goto	l718
   870  0F6                     u280:	
   871  0F6                     l714:	
   872  0F6  0211               	movf	___awdiv@divisor+1,w
   873  0F7  002F               	movwf	btemp+7
   874  0F8  0210               	movf	___awdiv@divisor,w
   875  0F9  002E               	movwf	btemp+6
   876  0FA  020E               	movf	wtemp3,w
   877  0FB  00B2               	subwf	___awdiv@dividend,f
   878  0FC  020F               	movf	wtemp3+1,w
   879  0FD  0703               	skipc
   880  0FE  00F3               	decf	___awdiv@dividend+1,f
   881  0FF  00B3               	subwf	___awdiv@dividend+1,f
   882  100                     l716:	
   883  100  0516               	bsf	___awdiv@quotient,0
   884  101                     l718:	
   885  101  0C01               	movlw	1
   886  102  0028               	movwf	btemp
   887  103                     u295:	
   888  103  0403               	clrc
   889  104  0331               	rrf	___awdiv@divisor+1,f
   890  105  0330               	rrf	___awdiv@divisor,f
   891  106  02E8               	decfsz	btemp,f
   892  107  0B03               	goto	u295
   893  108                     l720:	
   894  108  0C01               	movlw	1
   895  109  00B4               	subwf	___awdiv@counter,f
   896  10A  0743               	btfss	3,2
   897  10B  0B0D               	goto	u301
   898  10C  0B0E               	goto	u300
   899  10D                     u301:	
   900  10D  0AE1               	goto	l710
   901  10E                     u300:	
   902  10E                     l722:	
   903  10E  0215               	movf	___awdiv@sign,w
   904  10F  0643               	btfsc	3,2
   905  110  0B12               	goto	u311
   906  111  0B13               	goto	u310
   907  112                     u311:	
   908  112  0B18               	goto	l726
   909  113                     u310:	
   910  113                     l724:	
   911  113  0276               	comf	___awdiv@quotient,f
   912  114  0277               	comf	___awdiv@quotient+1,f
   913  115  02B6               	incf	___awdiv@quotient,f
   914  116  0643               	skipnz
   915  117  02B7               	incf	___awdiv@quotient+1,f
   916  118                     l726:	
   917  118  0217               	movf	___awdiv@quotient+1,w
   918  119  0031               	movwf	?___awdiv+1
   919  11A  0216               	movf	___awdiv@quotient,w
   920  11B  0030               	movwf	?___awdiv
   921  11C                     l191:	
   922  11C  0800               	retlw	0
   923  11D                     __end_of___awdiv:	
   924  0008                     btemp	set	8	;btemp
   925  0008                     wtemp0	set	8
   926  000A                     wtemp1	set	10
   927  000C                     wtemp2	set	12
   928  000E                     wtemp3	set	14
   929  0008                     ttemp0	set	8
   930  000B                     ttemp1	set	11
   931  0008                     ltemp0	set	8
   932  000C                     ltemp1	set	12
   933  000A                     ltemp3	set	10


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            16     12      12
    BANK1            16      0      16
    BANK3            16      0       0
    BANK2            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    1362
                                              8 BANK0      4     4      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1C       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10      C       C       5       75.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BANK1               10      0      10       7      100.0%
DATA                 0      0      1C       8        0.0%
BITBANK3            10      0       0       9        0.0%
BANK3               10      0       0      10        0.0%
BITBANK2            10      0       0      11        0.0%
BANK2               10      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Fri Jan 24 18:21:29 2020

            __CFG_CP$OFF 0000             ___awdiv@sign 0015                       fsr 0004  
            __CFG_OSC$HS 0000                      l204 03FF                      l191 011C  
                    l700 00C9                      l710 00E1                      l702 00CF  
                    l720 0108                      l712 00E8                      l704 00D2  
                    l800 01A7                      l714 00F6                      l706 00D9  
                    l722 010E                      l730 039D                      l810 01E5  
                    l802 01A8                      l724 0113                      l716 0100  
                    l708 00DD                      l740 03AF                      l732 03A0  
                    l812 01E6                      l804 01B3                      l726 0118  
                    l718 0101                      l750 03C8                      l742 03B4  
                    l734 03A4                      l814 01F1                      l806 01B6  
                    l752 03CC                      l744 03BA                      l760 03F1  
                    l736 03A9                      l816 01F4                      l808 01D2  
                    l690 00B8                      l762 03F6                      l754 03DA  
                    l746 03BD                      l738 03AB                      l818 01FB  
                    l770 0123                      l692 00BA                      l684 00AC  
                    l764 03FB                      l756 03E4                      l748 03C4  
                    l780 0134                      l772 0126                      l694 00BE  
                    l686 00AF                      l758 03EB                      l790 0162  
                    l782 0148                      l774 0128                      l696 00C3  
                    l688 00B3                      l792 016D                      l784 0149  
                    l776 012C                      l768 011D                      l698 00C7  
                    l786 0154                      l778 0133                      l794 0171  
                    l796 0178                      l788 0157                      l798 0194  
                    _RA0 0028                      _RA1 0029                      _RA2 002A  
                    _RA3 002B                      u300 010E                      u220 00B3  
                    u301 010D                      u221 00B2                      u310 0113  
                    u230 00BE                      u311 0112                      u231 00BD  
                    u240 00CF                      u400 03F6                      u320 03A4  
                    u241 00CE                      u401 03F5                      u321 03A3  
                    u330 03AF                      u410 012C                      u331 03AE  
                    u411 012B                      u260 00E1                      u340 03BA  
                    u261 00E0                      u341 03B9                      u255 00D4  
                    u280 00F6                      u360 03CC                      u281 00F5  
                    u361 03CB                      u425 013A                      u370 03DA  
                    u275 00E3                      u371 03D9                      u355 03BF  
                    u285 00F2                      u437 014F                      u390 03F1  
                    u295 0103                      u391 03F0                      u375 03D6  
                    u447 0168                      u385 03E6                      u457 01AE  
                    u467 01EC                      fsr0 0004                      indf 0000  
           ___awmod@sign 0015             __CFG_WDT$OFF 0000                     _main 011D  
                   btemp 0008                     start 0000                    ?_main 0010  
        __end_of___awdiv 011D          __end_of___awmod 0400          ___awdiv@divisor 0010  
        ___awdiv@counter 0014                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0005                    _TRISB 0006  
                  _TRISC 0007                    main@t 001A                    ltemp0 0008  
                  ltemp1 000C                    ltemp3 000A                    ttemp0 0008  
                  ttemp1 000B                    status 0003                    wtemp0 0008  
                  wtemp1 000A                    wtemp2 000C                    wtemp3 000E  
        __initialization 0003             __end_of_main 0200                   ??_main 0018  
       ___awdiv@dividend 0012                ??___awdiv 0000                ??___awmod 0000  
                 _digits 0030         ___awdiv@quotient 0016          ___awmod@divisor 0010  
        ___awmod@counter 0014  __end_of__initialization 0064           __pcstackCOMMON 0000  
           __pidataBANK1 0068               __pmaintext 011D                  ___awdiv 00AC  
                ___awmod 039D                  __ptext1 039D                  __ptext2 00AC  
       ___awmod@dividend 0012     end_of_initialization 0064      start_initialization 0003  
            __pdataBANK1 0030                ___latbits 0002            __pcstackBANK0 0010  
              __pjmp_tab 0078                 ?___awdiv 0010                 ?___awmod 0010  
       __size_of___awdiv 0071         __size_of___awmod 0063            entry____awdiv 007B  
          entry____awmod 0078            __size_of_main 00E3  
