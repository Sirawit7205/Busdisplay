

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Jan 23 17:36:06 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F57
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=ENTRY,delta=2
     5                           	psect	cinit,global,class=ENTRY,merge=1,delta=2
     6                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    11                           	psect	jmp_tab,global,class=ENTRY,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    13                           	dabs	1,0x8,8
    14  0000                     
    15                           ; Version 2.10
    16                           ; Generated 31/07/2019 GMT
    17                           ; 
    18                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F57 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57                           
    58                           	psect	idataBANK1
    59  068                     __pidataBANK1:	
    60                           
    61                           ;initializer for _digits
    62  068  08C0               	retlw	192
    63  069  08F9               	retlw	249
    64  06A  08A4               	retlw	164
    65  06B  08B0               	retlw	176
    66  06C  0899               	retlw	153
    67  06D  0892               	retlw	146
    68  06E  0882               	retlw	130
    69  06F  08D8               	retlw	216
    70  070  0880               	retlw	128
    71  071  0890               	retlw	144
    72  072  0888               	retlw	136
    73  073  0883               	retlw	131
    74  074  08C6               	retlw	198
    75  075  08A1               	retlw	161
    76  076  0886               	retlw	134
    77  077  088E               	retlw	142
    78  0006                     _PORTB	set	6
    79  0007                     _PORTC	set	7
    80  0005                     _PORTA	set	5
    81  0007                     _TRISC	set	7
    82  0006                     _TRISB	set	6
    83  0005                     _TRISA	set	5
    84  0028                     _RA0	set	40
    85  002A                     _RA2	set	42
    86  0029                     _RA1	set	41
    87  002B                     _RA3	set	43
    88                           
    89                           ; #config settings
    90  0000                     
    91                           	psect	cinit
    92  003                     start_initialization:	
    93  003                     __initialization:	
    94                           
    95                           ; Initialize objects allocated to BANK1
    96  003  05A4               	bsf	4,5	;FSR5=1, select bank1
    97  004  04C3  04A3  0968  04C3  04A3  	fcall	__pidataBANK1	;fetch initializer
    98  009  0030               	movwf	__pdataBANK1& (0+31)
    99  00A  04C3  04A3  0969  04C3  04A3  	fcall	__pidataBANK1+1	;fetch initializer
   100  00F  0031               	movwf	(__pdataBANK1+1)& (0+31)
   101  010  04C3  04A3  096A  04C3  04A3  	fcall	__pidataBANK1+2	;fetch initializer
   102  015  0032               	movwf	(__pdataBANK1+2)& (0+31)
   103  016  04C3  04A3  096B  04C3  04A3  	fcall	__pidataBANK1+3	;fetch initializer
   104  01B  0033               	movwf	(__pdataBANK1+3)& (0+31)
   105  01C  04C3  04A3  096C  04C3  04A3  	fcall	__pidataBANK1+4	;fetch initializer
   106  021  0034               	movwf	(__pdataBANK1+4)& (0+31)
   107  022  04C3  04A3  096D  04C3  04A3  	fcall	__pidataBANK1+5	;fetch initializer
   108  027  0035               	movwf	(__pdataBANK1+5)& (0+31)
   109  028  04C3  04A3  096E  04C3  04A3  	fcall	__pidataBANK1+6	;fetch initializer
   110  02D  0036               	movwf	(__pdataBANK1+6)& (0+31)
   111  02E  04C3  04A3  096F  04C3  04A3  	fcall	__pidataBANK1+7	;fetch initializer
   112  033  0037               	movwf	(__pdataBANK1+7)& (0+31)
   113  034  04C3  04A3  0970  04C3  04A3  	fcall	__pidataBANK1+8	;fetch initializer
   114  039  0038               	movwf	(__pdataBANK1+8)& (0+31)
   115  03A  04C3  04A3  0971  04C3  04A3  	fcall	__pidataBANK1+9	;fetch initializer
   116  03F  0039               	movwf	(__pdataBANK1+9)& (0+31)
   117  040  04C3  04A3  0972  04C3  04A3  	fcall	__pidataBANK1+10	;fetch initializer
   118  045  003A               	movwf	(__pdataBANK1+10)& (0+31)
   119  046  04C3  04A3  0973  04C3  04A3  	fcall	__pidataBANK1+11	;fetch initializer
   120  04B  003B               	movwf	(__pdataBANK1+11)& (0+31)
   121  04C  04C3  04A3  0974  04C3  04A3  	fcall	__pidataBANK1+12	;fetch initializer
   122  051  003C               	movwf	(__pdataBANK1+12)& (0+31)
   123  052  04C3  04A3  0975  04C3  04A3  	fcall	__pidataBANK1+13	;fetch initializer
   124  057  003D               	movwf	(__pdataBANK1+13)& (0+31)
   125  058  04C3  04A3  0976  04C3  04A3  	fcall	__pidataBANK1+14	;fetch initializer
   126  05D  003E               	movwf	(__pdataBANK1+14)& (0+31)
   127  05E  04C3  04A3  0977  04C3  04A3  	fcall	__pidataBANK1+15	;fetch initializer
   128  063  003F               	movwf	(__pdataBANK1+15)& (0+31)
   129  064                     end_of_initialization:	
   130                           ;End of C runtime variable initialization code
   131                           
   132  064                     __end_of__initialization:	
   133  064  0064               	clrf	4
   134  065  04C3  04A3  0B53   	ljmp	_main	;jump to C main() function
   135                           
   136                           	psect	dataBANK1
   137  030                     __pdataBANK1:	
   138  030                     _digits:	
   139  030                     	ds	16
   140                           
   141                           	psect	cstackBANK0
   142  010                     __pcstackBANK0:	
   143  010                     ?_main:	
   144  010                     ?___awdiv:	
   145                           ; 2 bytes @ 0x0
   146                           
   147  010                     ?___awmod:	
   148                           ; 2 bytes @ 0x0
   149                           
   150  010                     ___awdiv@divisor:	
   151                           ; 2 bytes @ 0x0
   152                           
   153  010                     ___awmod@divisor:	
   154                           ; 2 bytes @ 0x0
   155                           
   156                           
   157                           ; 2 bytes @ 0x0
   158  010                     	ds	2
   159  012                     ___awdiv@dividend:	
   160  012                     ___awmod@dividend:	
   161                           ; 2 bytes @ 0x2
   162                           
   163                           
   164                           ; 2 bytes @ 0x2
   165  012                     	ds	2
   166  014                     ___awdiv@counter:	
   167  014                     ___awmod@counter:	
   168                           ; 1 bytes @ 0x4
   169                           
   170                           
   171                           ; 1 bytes @ 0x4
   172  014                     	ds	1
   173  015                     ___awdiv@sign:	
   174  015                     ___awmod@sign:	
   175                           ; 1 bytes @ 0x5
   176                           
   177                           
   178                           ; 1 bytes @ 0x5
   179  015                     	ds	1
   180  016                     ___awdiv@quotient:	
   181                           
   182                           ; 2 bytes @ 0x6
   183  016                     	ds	2
   184  018                     main@t:	
   185                           
   186                           ; 2 bytes @ 0x8
   187  018                     	ds	2
   188                           
   189                           	psect	cstackCOMMON
   190  000                     __pcstackCOMMON:	
   191  000                     ??_main:	
   192  000                     ??___awdiv:	
   193                           ; 1 bytes @ 0x0
   194                           
   195  000                     ??___awmod:	
   196                           ; 1 bytes @ 0x0
   197                           
   198                           
   199                           	psect	maintext
   200  153                     __pmaintext:	
   201                           ; 1 bytes @ 0x0
   202 ;;
   203 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   204 ;;
   205 ;; *************** function _main *****************
   206 ;; Defined at:
   207 ;;		line 24 in file "main.c"
   208 ;; Parameters:    Size  Location     Type
   209 ;;		None
   210 ;; Auto vars:     Size  Location     Type
   211 ;;  t               2    8[BANK0 ] int 
   212 ;; Return value:  Size  Location     Type
   213 ;;                  2   26[None  ] int 
   214 ;; Registers used:
   215 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+6, btemp+7, pclath, cstack
   216 ;; Tracked objects:
   217 ;;		On entry : B00/0
   218 ;;		On exit  : 0/0
   219 ;;		Unchanged: 0/0
   220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   221 ;;      Params:         0       0       0       0       0
   222 ;;      Locals:         0       2       0       0       0
   223 ;;      Temps:          0       0       0       0       0
   224 ;;      Totals:         0       2       0       0       0
   225 ;;Total ram usage:        2 bytes
   226 ;; Hardware stack levels required when called:    1
   227 ;; This function calls:
   228 ;;		___awdiv
   229 ;;		___awmod
   230 ;; This function is called by:
   231 ;;		Startup code after reset
   232 ;; This function uses a non-reentrant model
   233 ;;
   234                           
   235                           
   236                           ;psect for function _main
   237  153                     _main:	
   238  153                     l756:	
   239                           ;incstack = 0
   240                           ; Regs used in _main: [wreg-fsr0h+status,2-btemp+0+btemp+6+btemp+7+pclath+cstack]
   241                           
   242                           
   243                           ;main.c: 26:     int t;;main.c: 28:     TRISA = 0x08;
   244  153  0C08               	movlw	8
   245  154  0005               	tris	5
   246                           
   247                           ;main.c: 29:     TRISB = 0xFF;
   248  155  0CFF               	movlw	255
   249  156  0006               	tris	6
   250                           
   251                           ;main.c: 30:     TRISC = 0x00;
   252  157  0C00               	movlw	0
   253  158  0007               	tris	7
   254  159                     l758:	
   255                           
   256                           ;main.c: 32:     PORTA = 0x00;
   257  159  04A4               	bcf	4,5	;FSR5=0, select bank0
   258  15A  04C4               	bcf	4,6	;FSR6=0, select bank0
   259  15B  0065               	clrf	5	;volatile
   260  15C                     l760:	
   261                           
   262                           ;main.c: 33:     PORTC = 0xFF;
   263  15C  0CFF               	movlw	255
   264  15D  0027               	movwf	7	;volatile
   265  15E                     l762:	
   266                           
   267                           ;main.c: 36:     {;main.c: 37:         if(RA3 == 1)
   268  15E  0765               	btfss	5,3	;volatile
   269  15F  0B61               	goto	u411
   270  160  0B62               	goto	u410
   271  161                     u411:	
   272  161  0B8C               	goto	l778
   273  162                     u410:	
   274  162                     l764:	
   275                           
   276                           ;main.c: 38:         {;main.c: 39:             t = PORTB;
   277  162  0206               	movf	6,w	;volatile
   278  163  002E               	movwf	btemp+6
   279  164  006F               	clrf	btemp+7
   280  165  020E               	movf	wtemp3,w
   281  166  0038               	movwf	main@t
   282  167  020F               	movf	wtemp3+1,w
   283  168  0039               	movwf	main@t+1
   284  169                     l766:	
   285                           
   286                           ;main.c: 42:             PORTC = digits[t >> 4];
   287  169  0219               	movf	main@t+1,w
   288  16A  002F               	movwf	btemp+7
   289  16B  0218               	movf	main@t,w
   290  16C  002E               	movwf	btemp+6
   291  16D  0C04               	movlw	4
   292  16E  0028               	movwf	btemp
   293  16F                     u425:	
   294  16F  034F               	rlf	btemp+7,w
   295  170  032F               	rrf	btemp+7,f
   296  171  032E               	rrf	btemp+6,f
   297  172  02E8               	decfsz	btemp,f
   298  173  0B6F               	goto	u425
   299  174  020E               	movf	wtemp3,w
   300  175  0028               	movwf	btemp
   301  176  0C30               	movlw	low (_digits| 0)
   302  177  01C8               	addwf	btemp,w
   303  178  0024               	movwf	4
   304  179  0200               	movf	0,w
   305  17A  04A4               	bcf	4,5	;FSR5=0, select bank0
   306  17B  04C4               	bcf	4,6	;FSR6=0, select bank0
   307  17C  0027               	movwf	7	;volatile
   308  17D                     l768:	
   309                           
   310                           ;main.c: 43:             RA1 = 1;
   311  17D  0525               	bsf	5,1	;volatile
   312  17E                     l770:	
   313                           
   314                           ;main.c: 45:             RA1 = 0;
   315  17E  0425               	bcf	5,1	;volatile
   316  17F                     l772:	
   317                           
   318                           ;main.c: 49:             PORTC = digits[t & 0x0F];
   319  17F  0218               	movf	main@t,w
   320  180  0E0F               	andlw	15
   321  181  0028               	movwf	btemp
   322  182  0C30               	movlw	low (_digits| 0)
   323  183  01C8               	addwf	btemp,w
   324  184  0024               	movwf	4
   325  185  0200               	movf	0,w
   326  186  04A4               	bcf	4,5	;FSR5=0, select bank0
   327  187  04C4               	bcf	4,6	;FSR6=0, select bank0
   328  188  0027               	movwf	7	;volatile
   329  189                     l774:	
   330                           
   331                           ;main.c: 50:             RA2 = 1;
   332  189  0545               	bsf	5,2	;volatile
   333  18A                     l776:	
   334                           
   335                           ;main.c: 52:             RA2 = 0;
   336  18A  0445               	bcf	5,2	;volatile
   337                           
   338                           ;main.c: 54:         }
   339  18B  0B5E               	goto	l762
   340  18C                     l778:	
   341                           
   342                           ;main.c: 56:         {;main.c: 57:             t = PORTB;
   343  18C  0206               	movf	6,w	;volatile
   344  18D  002E               	movwf	btemp+6
   345  18E  006F               	clrf	btemp+7
   346  18F  020E               	movf	wtemp3,w
   347  190  0038               	movwf	main@t
   348  191  020F               	movf	wtemp3+1,w
   349  192  0039               	movwf	main@t+1
   350  193                     l780:	
   351                           
   352                           ;main.c: 60:             PORTC = digits[t / 100];
   353  193  0C64               	movlw	100
   354  194  0030               	movwf	___awdiv@divisor
   355  195  0C00               	movlw	0
   356  196  0031               	movwf	___awdiv@divisor+1
   357  197  0219               	movf	main@t+1,w
   358  198  0033               	movwf	___awdiv@dividend+1
   359  199  0218               	movf	main@t,w
   360  19A  0032               	movwf	___awdiv@dividend
   361  19B  04C3  04A3  097B  04C3  04A3  	fcall	entry____awdiv
   362  1A0  04A4               	bcf	4,5	;FSR5=0, select bank0
   363  1A1  04C4               	bcf	4,6	;FSR6=0, select bank0
   364  1A2  0210               	movf	?___awdiv,w
   365  1A3  002E               	movwf	wtemp3
   366  1A4  0211               	movf	?___awdiv+1,w
   367  1A5  002F               	movwf	wtemp3+1
   368  1A6  020E               	movf	wtemp3,w
   369  1A7  0028               	movwf	btemp
   370  1A8  0C30               	movlw	low (_digits| 0)
   371  1A9  01C8               	addwf	btemp,w
   372  1AA  0024               	movwf	4
   373  1AB  0200               	movf	0,w
   374  1AC  04A4               	bcf	4,5	;FSR5=0, select bank0
   375  1AD  04C4               	bcf	4,6	;FSR6=0, select bank0
   376  1AE  0027               	movwf	7	;volatile
   377  1AF                     l782:	
   378                           
   379                           ;main.c: 61:             t = t % 100;
   380  1AF  0C64               	movlw	100
   381  1B0  0030               	movwf	___awmod@divisor
   382  1B1  0C00               	movlw	0
   383  1B2  0031               	movwf	___awmod@divisor+1
   384  1B3  0219               	movf	main@t+1,w
   385  1B4  0033               	movwf	___awmod@dividend+1
   386  1B5  0218               	movf	main@t,w
   387  1B6  0032               	movwf	___awmod@dividend
   388  1B7  04C3  04A3  0978  04C3  04A3  	fcall	entry____awmod
   389  1BC  04A4               	bcf	4,5	;FSR5=0, select bank0
   390  1BD  04C4               	bcf	4,6	;FSR6=0, select bank0
   391  1BE  0211               	movf	?___awmod+1,w
   392  1BF  0039               	movwf	main@t+1
   393  1C0  0210               	movf	?___awmod,w
   394  1C1  0038               	movwf	main@t
   395  1C2                     l784:	
   396                           
   397                           ;main.c: 62:             RA0 = 1;
   398  1C2  0505               	bsf	5,0	;volatile
   399  1C3                     l786:	
   400                           
   401                           ;main.c: 64:             RA0 = 0;
   402  1C3  0405               	bcf	5,0	;volatile
   403  1C4                     l788:	
   404                           
   405                           ;main.c: 68:             PORTC = digits[t / 10];
   406  1C4  0C0A               	movlw	10
   407  1C5  0030               	movwf	___awdiv@divisor
   408  1C6  0C00               	movlw	0
   409  1C7  0031               	movwf	___awdiv@divisor+1
   410  1C8  0219               	movf	main@t+1,w
   411  1C9  0033               	movwf	___awdiv@dividend+1
   412  1CA  0218               	movf	main@t,w
   413  1CB  0032               	movwf	___awdiv@dividend
   414  1CC  04C3  04A3  097B  04C3  04A3  	fcall	entry____awdiv
   415  1D1  04A4               	bcf	4,5	;FSR5=0, select bank0
   416  1D2  04C4               	bcf	4,6	;FSR6=0, select bank0
   417  1D3  0210               	movf	?___awdiv,w
   418  1D4  002E               	movwf	wtemp3
   419  1D5  0211               	movf	?___awdiv+1,w
   420  1D6  002F               	movwf	wtemp3+1
   421  1D7  020E               	movf	wtemp3,w
   422  1D8  0028               	movwf	btemp
   423  1D9  0C30               	movlw	low (_digits| 0)
   424  1DA  01C8               	addwf	btemp,w
   425  1DB  0024               	movwf	4
   426  1DC  0200               	movf	0,w
   427  1DD  04A4               	bcf	4,5	;FSR5=0, select bank0
   428  1DE  04C4               	bcf	4,6	;FSR6=0, select bank0
   429  1DF  0027               	movwf	7	;volatile
   430  1E0                     l790:	
   431                           
   432                           ;main.c: 69:             t = t % 10;
   433  1E0  0C0A               	movlw	10
   434  1E1  0030               	movwf	___awmod@divisor
   435  1E2  0C00               	movlw	0
   436  1E3  0031               	movwf	___awmod@divisor+1
   437  1E4  0219               	movf	main@t+1,w
   438  1E5  0033               	movwf	___awmod@dividend+1
   439  1E6  0218               	movf	main@t,w
   440  1E7  0032               	movwf	___awmod@dividend
   441  1E8  04C3  04A3  0978  04C3  04A3  	fcall	entry____awmod
   442  1ED  04A4               	bcf	4,5	;FSR5=0, select bank0
   443  1EE  04C4               	bcf	4,6	;FSR6=0, select bank0
   444  1EF  0211               	movf	?___awmod+1,w
   445  1F0  0039               	movwf	main@t+1
   446  1F1  0210               	movf	?___awmod,w
   447  1F2  0038               	movwf	main@t
   448  1F3                     l792:	
   449                           
   450                           ;main.c: 70:             RA1 = 1;
   451  1F3  0525               	bsf	5,1	;volatile
   452  1F4                     l794:	
   453                           
   454                           ;main.c: 72:             RA1 = 0;
   455  1F4  0425               	bcf	5,1	;volatile
   456  1F5                     l796:	
   457                           
   458                           ;main.c: 76:             PORTC = digits[t];
   459  1F5  0C30               	movlw	low (_digits| 0)
   460  1F6  01D8               	addwf	main@t,w
   461  1F7  0024               	movwf	4
   462  1F8  0200               	movf	0,w
   463  1F9  04A4               	bcf	4,5	;FSR5=0, select bank0
   464  1FA  04C4               	bcf	4,6	;FSR6=0, select bank0
   465  1FB  0027               	movwf	7	;volatile
   466  1FC  0B89               	goto	l774
   467  1FD  04C3  04A3  0A00   	ljmp	start
   468  200                     __end_of_main:	
   469                           
   470                           	psect	text1
   471  07F                     __ptext1:	
   472 ;; *************** function ___awmod *****************
   473 ;; Defined at:
   474 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awmod.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;  divisor         2    0[BANK0 ] int 
   477 ;;  dividend        2    2[BANK0 ] int 
   478 ;; Auto vars:     Size  Location     Type
   479 ;;  sign            1    5[BANK0 ] unsigned char 
   480 ;;  counter         1    4[BANK0 ] unsigned char 
   481 ;; Return value:  Size  Location     Type
   482 ;;                  2    0[BANK0 ] int 
   483 ;; Registers used:
   484 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+6, btemp+7
   485 ;; Tracked objects:
   486 ;;		On entry : 0/0
   487 ;;		On exit  : 0/0
   488 ;;		Unchanged: 0/0
   489 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   490 ;;      Params:         0       4       0       0       0
   491 ;;      Locals:         0       2       0       0       0
   492 ;;      Temps:          0       0       0       0       0
   493 ;;      Totals:         0       6       0       0       0
   494 ;;Total ram usage:        6 bytes
   495 ;; Hardware stack levels used:    1
   496 ;; This function calls:
   497 ;;		Nothing
   498 ;; This function is called by:
   499 ;;		_main
   500 ;; This function uses a non-reentrant model
   501 ;;
   502                           
   503                           
   504                           ;psect for function ___awmod
   505  07F                     ___awmod:	
   506  07F                     l718:	
   507  07F  04A4               	bcf	4,5	;FSR5=0, select bank0
   508  080  04C4               	bcf	4,6	;FSR6=0, select bank0
   509  081  0075               	clrf	___awmod@sign
   510  082                     l720:	
   511  082  07F3               	btfss	___awmod@dividend+1,7
   512  083  0A85               	goto	u321
   513  084  0A86               	goto	u320
   514  085                     u321:	
   515  085  0A8D               	goto	l726
   516  086                     u320:	
   517  086                     l722:	
   518  086  0272               	comf	___awmod@dividend,f
   519  087  0273               	comf	___awmod@dividend+1,f
   520  088  02B2               	incf	___awmod@dividend,f
   521  089  0643               	skipnz
   522  08A  02B3               	incf	___awmod@dividend+1,f
   523  08B                     l724:	
   524  08B  0075               	clrf	___awmod@sign
   525  08C  02B5               	incf	___awmod@sign,f
   526  08D                     l726:	
   527  08D  07F1               	btfss	___awmod@divisor+1,7
   528  08E  0A90               	goto	u331
   529  08F  0A91               	goto	u330
   530  090                     u331:	
   531  090  0A96               	goto	l730
   532  091                     u330:	
   533  091                     l728:	
   534  091  0270               	comf	___awmod@divisor,f
   535  092  0271               	comf	___awmod@divisor+1,f
   536  093  02B0               	incf	___awmod@divisor,f
   537  094  0643               	skipnz
   538  095  02B1               	incf	___awmod@divisor+1,f
   539  096                     l730:	
   540  096  0210               	movf	___awmod@divisor,w
   541  097  0111               	iorwf	___awmod@divisor+1,w
   542  098  0643               	btfsc	3,2
   543  099  0A9B               	goto	u341
   544  09A  0A9C               	goto	u340
   545  09B                     u341:	
   546  09B  0AD3               	goto	l748
   547  09C                     u340:	
   548  09C                     l732:	
   549  09C  0074               	clrf	___awmod@counter
   550  09D  02B4               	incf	___awmod@counter,f
   551  09E  0AAA               	goto	l738
   552  09F                     l734:	
   553  09F  0C01               	movlw	1
   554  0A0  0028               	movwf	btemp
   555  0A1                     u355:	
   556  0A1  0403               	clrc
   557  0A2  0370               	rlf	___awmod@divisor,f
   558  0A3  0371               	rlf	___awmod@divisor+1,f
   559  0A4  02E8               	decfsz	btemp,f
   560  0A5  0AA1               	goto	u355
   561  0A6                     l736:	
   562  0A6  0C01               	movlw	1
   563  0A7  002F               	movwf	btemp+7
   564  0A8  020F               	movf	btemp+7,w
   565  0A9  01F4               	addwf	___awmod@counter,f
   566  0AA                     l738:	
   567  0AA  07F1               	btfss	___awmod@divisor+1,7
   568  0AB  0AAD               	goto	u361
   569  0AC  0AAE               	goto	u360
   570  0AD                     u361:	
   571  0AD  0A9F               	goto	l734
   572  0AE                     u360:	
   573  0AE                     l740:	
   574  0AE  0211               	movf	___awmod@divisor+1,w
   575  0AF  002F               	movwf	btemp+7
   576  0B0  0210               	movf	___awmod@divisor,w
   577  0B1  002E               	movwf	btemp+6
   578  0B2  020F               	movf	wtemp3+1,w
   579  0B3  0093               	subwf	___awmod@dividend+1,w
   580  0B4  0743               	skipz
   581  0B5  0AB8               	goto	u375
   582  0B6  020E               	movf	wtemp3,w
   583  0B7  0092               	subwf	___awmod@dividend,w
   584  0B8                     u375:	
   585  0B8  0703               	skipc
   586  0B9  0ABB               	goto	u371
   587  0BA  0ABC               	goto	u370
   588  0BB                     u371:	
   589  0BB  0AC6               	goto	l744
   590  0BC                     u370:	
   591  0BC                     l742:	
   592  0BC  0211               	movf	___awmod@divisor+1,w
   593  0BD  002F               	movwf	btemp+7
   594  0BE  0210               	movf	___awmod@divisor,w
   595  0BF  002E               	movwf	btemp+6
   596  0C0  020E               	movf	wtemp3,w
   597  0C1  00B2               	subwf	___awmod@dividend,f
   598  0C2  020F               	movf	wtemp3+1,w
   599  0C3  0703               	skipc
   600  0C4  00F3               	decf	___awmod@dividend+1,f
   601  0C5  00B3               	subwf	___awmod@dividend+1,f
   602  0C6                     l744:	
   603  0C6  0C01               	movlw	1
   604  0C7  0028               	movwf	btemp
   605  0C8                     u385:	
   606  0C8  0403               	clrc
   607  0C9  0331               	rrf	___awmod@divisor+1,f
   608  0CA  0330               	rrf	___awmod@divisor,f
   609  0CB  02E8               	decfsz	btemp,f
   610  0CC  0AC8               	goto	u385
   611  0CD                     l746:	
   612  0CD  0C01               	movlw	1
   613  0CE  00B4               	subwf	___awmod@counter,f
   614  0CF  0743               	btfss	3,2
   615  0D0  0AD2               	goto	u391
   616  0D1  0AD3               	goto	u390
   617  0D2                     u391:	
   618  0D2  0AAE               	goto	l740
   619  0D3                     u390:	
   620  0D3                     l748:	
   621  0D3  0215               	movf	___awmod@sign,w
   622  0D4  0643               	btfsc	3,2
   623  0D5  0AD7               	goto	u401
   624  0D6  0AD8               	goto	u400
   625  0D7                     u401:	
   626  0D7  0ADD               	goto	l752
   627  0D8                     u400:	
   628  0D8                     l750:	
   629  0D8  0272               	comf	___awmod@dividend,f
   630  0D9  0273               	comf	___awmod@dividend+1,f
   631  0DA  02B2               	incf	___awmod@dividend,f
   632  0DB  0643               	skipnz
   633  0DC  02B3               	incf	___awmod@dividend+1,f
   634  0DD                     l752:	
   635  0DD  0213               	movf	___awmod@dividend+1,w
   636  0DE  0031               	movwf	?___awmod+1
   637  0DF  0212               	movf	___awmod@dividend,w
   638  0E0  0030               	movwf	?___awmod
   639  0E1                     l202:	
   640  0E1  0800               	retlw	0
   641  0E2                     __end_of___awmod:	
   642                           
   643                           	psect	jmp_tab
   644  078                     __pjmp_tab:	
   645                           ;incstack = 0
   646                           ; Regs used in ___awmod: [wreg-fsr0h+status,2-btemp+0+btemp+6+btemp+7]
   647                           
   648  078                     entry____awmod:	
   649  078  04C3  04A3  0A7F   	ljmp	___awmod
   650  07B                     entry____awdiv:	
   651                           ;incstack = 0
   652                           ; Regs used in ___awdiv: [wreg-fsr0h+status,2-btemp+0+btemp+6+btemp+7]
   653                           
   654  07B  04C3  04A3  0AE2   	ljmp	___awdiv
   655                           
   656                           	psect	text2
   657  0E2                     __ptext2:	
   658 ;; *************** function ___awdiv *****************
   659 ;; Defined at:
   660 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
   661 ;; Parameters:    Size  Location     Type
   662 ;;  divisor         2    0[BANK0 ] int 
   663 ;;  dividend        2    2[BANK0 ] int 
   664 ;; Auto vars:     Size  Location     Type
   665 ;;  quotient        2    6[BANK0 ] int 
   666 ;;  sign            1    5[BANK0 ] unsigned char 
   667 ;;  counter         1    4[BANK0 ] unsigned char 
   668 ;; Return value:  Size  Location     Type
   669 ;;                  2    0[BANK0 ] int 
   670 ;; Registers used:
   671 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+0, btemp+6, btemp+7
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   677 ;;      Params:         0       4       0       0       0
   678 ;;      Locals:         0       4       0       0       0
   679 ;;      Temps:          0       0       0       0       0
   680 ;;      Totals:         0       8       0       0       0
   681 ;;Total ram usage:        8 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; This function calls:
   684 ;;		Nothing
   685 ;; This function is called by:
   686 ;;		_main
   687 ;; This function uses a non-reentrant model
   688 ;;
   689                           
   690                           
   691                           ;psect for function ___awdiv
   692  0E2                     ___awdiv:	
   693  0E2                     l672:	
   694  0E2  04A4               	bcf	4,5	;FSR5=0, select bank0
   695  0E3  04C4               	bcf	4,6	;FSR6=0, select bank0
   696  0E4  0075               	clrf	___awdiv@sign
   697  0E5                     l674:	
   698  0E5  07F1               	btfss	___awdiv@divisor+1,7
   699  0E6  0AE8               	goto	u221
   700  0E7  0AE9               	goto	u220
   701  0E8                     u221:	
   702  0E8  0AF0               	goto	l680
   703  0E9                     u220:	
   704  0E9                     l676:	
   705  0E9  0270               	comf	___awdiv@divisor,f
   706  0EA  0271               	comf	___awdiv@divisor+1,f
   707  0EB  02B0               	incf	___awdiv@divisor,f
   708  0EC  0643               	skipnz
   709  0ED  02B1               	incf	___awdiv@divisor+1,f
   710  0EE                     l678:	
   711  0EE  0075               	clrf	___awdiv@sign
   712  0EF  02B5               	incf	___awdiv@sign,f
   713  0F0                     l680:	
   714  0F0  07F3               	btfss	___awdiv@dividend+1,7
   715  0F1  0AF3               	goto	u231
   716  0F2  0AF4               	goto	u230
   717  0F3                     u231:	
   718  0F3  0AFD               	goto	l686
   719  0F4                     u230:	
   720  0F4                     l682:	
   721  0F4  0272               	comf	___awdiv@dividend,f
   722  0F5  0273               	comf	___awdiv@dividend+1,f
   723  0F6  02B2               	incf	___awdiv@dividend,f
   724  0F7  0643               	skipnz
   725  0F8  02B3               	incf	___awdiv@dividend+1,f
   726  0F9                     l684:	
   727  0F9  0C01               	movlw	1
   728  0FA  002F               	movwf	btemp+7
   729  0FB  020F               	movf	btemp+7,w
   730  0FC  01B5               	xorwf	___awdiv@sign,f
   731  0FD                     l686:	
   732  0FD  0076               	clrf	___awdiv@quotient
   733  0FE  0077               	clrf	___awdiv@quotient+1
   734  0FF                     l688:	
   735  0FF  0210               	movf	___awdiv@divisor,w
   736  100  0111               	iorwf	___awdiv@divisor+1,w
   737  101  0643               	btfsc	3,2
   738  102  0B04               	goto	u241
   739  103  0B05               	goto	u240
   740  104                     u241:	
   741  104  0B44               	goto	l710
   742  105                     u240:	
   743  105                     l690:	
   744  105  0074               	clrf	___awdiv@counter
   745  106  02B4               	incf	___awdiv@counter,f
   746  107  0B13               	goto	l696
   747  108                     l692:	
   748  108  0C01               	movlw	1
   749  109  0028               	movwf	btemp
   750  10A                     u255:	
   751  10A  0403               	clrc
   752  10B  0370               	rlf	___awdiv@divisor,f
   753  10C  0371               	rlf	___awdiv@divisor+1,f
   754  10D  02E8               	decfsz	btemp,f
   755  10E  0B0A               	goto	u255
   756  10F                     l694:	
   757  10F  0C01               	movlw	1
   758  110  002F               	movwf	btemp+7
   759  111  020F               	movf	btemp+7,w
   760  112  01F4               	addwf	___awdiv@counter,f
   761  113                     l696:	
   762  113  07F1               	btfss	___awdiv@divisor+1,7
   763  114  0B16               	goto	u261
   764  115  0B17               	goto	u260
   765  116                     u261:	
   766  116  0B08               	goto	l692
   767  117                     u260:	
   768  117                     l698:	
   769  117  0C01               	movlw	1
   770  118  0028               	movwf	btemp
   771  119                     u275:	
   772  119  0403               	clrc
   773  11A  0376               	rlf	___awdiv@quotient,f
   774  11B  0377               	rlf	___awdiv@quotient+1,f
   775  11C  02E8               	decfsz	btemp,f
   776  11D  0B19               	goto	u275
   777  11E                     l700:	
   778  11E  0211               	movf	___awdiv@divisor+1,w
   779  11F  002F               	movwf	btemp+7
   780  120  0210               	movf	___awdiv@divisor,w
   781  121  002E               	movwf	btemp+6
   782  122  020F               	movf	wtemp3+1,w
   783  123  0093               	subwf	___awdiv@dividend+1,w
   784  124  0743               	skipz
   785  125  0B28               	goto	u285
   786  126  020E               	movf	wtemp3,w
   787  127  0092               	subwf	___awdiv@dividend,w
   788  128                     u285:	
   789  128  0703               	skipc
   790  129  0B2B               	goto	u281
   791  12A  0B2C               	goto	u280
   792  12B                     u281:	
   793  12B  0B37               	goto	l706
   794  12C                     u280:	
   795  12C                     l702:	
   796  12C  0211               	movf	___awdiv@divisor+1,w
   797  12D  002F               	movwf	btemp+7
   798  12E  0210               	movf	___awdiv@divisor,w
   799  12F  002E               	movwf	btemp+6
   800  130  020E               	movf	wtemp3,w
   801  131  00B2               	subwf	___awdiv@dividend,f
   802  132  020F               	movf	wtemp3+1,w
   803  133  0703               	skipc
   804  134  00F3               	decf	___awdiv@dividend+1,f
   805  135  00B3               	subwf	___awdiv@dividend+1,f
   806  136                     l704:	
   807  136  0516               	bsf	___awdiv@quotient,0
   808  137                     l706:	
   809  137  0C01               	movlw	1
   810  138  0028               	movwf	btemp
   811  139                     u295:	
   812  139  0403               	clrc
   813  13A  0331               	rrf	___awdiv@divisor+1,f
   814  13B  0330               	rrf	___awdiv@divisor,f
   815  13C  02E8               	decfsz	btemp,f
   816  13D  0B39               	goto	u295
   817  13E                     l708:	
   818  13E  0C01               	movlw	1
   819  13F  00B4               	subwf	___awdiv@counter,f
   820  140  0743               	btfss	3,2
   821  141  0B43               	goto	u301
   822  142  0B44               	goto	u300
   823  143                     u301:	
   824  143  0B17               	goto	l698
   825  144                     u300:	
   826  144                     l710:	
   827  144  0215               	movf	___awdiv@sign,w
   828  145  0643               	btfsc	3,2
   829  146  0B48               	goto	u311
   830  147  0B49               	goto	u310
   831  148                     u311:	
   832  148  0B4E               	goto	l714
   833  149                     u310:	
   834  149                     l712:	
   835  149  0276               	comf	___awdiv@quotient,f
   836  14A  0277               	comf	___awdiv@quotient+1,f
   837  14B  02B6               	incf	___awdiv@quotient,f
   838  14C  0643               	skipnz
   839  14D  02B7               	incf	___awdiv@quotient+1,f
   840  14E                     l714:	
   841  14E  0217               	movf	___awdiv@quotient+1,w
   842  14F  0031               	movwf	?___awdiv+1
   843  150  0216               	movf	___awdiv@quotient,w
   844  151  0030               	movwf	?___awdiv
   845  152                     l189:	
   846  152  0800               	retlw	0
   847  153                     __end_of___awdiv:	
   848  0008                     btemp	set	8	;btemp
   849  0008                     wtemp0	set	8
   850  000A                     wtemp1	set	10
   851  000C                     wtemp2	set	12
   852  000E                     wtemp3	set	14
   853  0008                     ttemp0	set	8
   854  000B                     ttemp1	set	11
   855  0008                     ltemp0	set	8
   856  000C                     ltemp1	set	12
   857  000A                     ltemp3	set	10


Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            16     10      10
    BANK1            16      0      16
    BANK3            16      0       0
    BANK2            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1362
                                              8 BANK0      2     2      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     600
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     604
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      1A       3        0.0%
BITBANK0            10      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               10      A       A       5       62.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            10      0       0       6        0.0%
BANK1               10      0      10       7      100.0%
DATA                 0      0      1A       8        0.0%
BITBANK3            10      0       0       9        0.0%
BANK3               10      0       0      10        0.0%
BITBANK2            10      0       0      11        0.0%
BANK2               10      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Jan 23 17:36:06 2020

            __CFG_CP$OFF 0000             ___awdiv@sign 0015                       fsr 0004  
            __CFG_OSC$HS 0000              __CFG_WDT$ON 0000                      l202 00E1  
                    l700 011E                      l189 0152                      l702 012C  
                    l710 0144                      l712 0149                      l704 0136  
                    l720 0082                      l714 014E                      l706 0137  
                    l730 0096                      l722 0086                      l708 013E  
                    l740 00AE                      l732 009C                      l724 008B  
                    l750 00D8                      l742 00BC                      l734 009F  
                    l726 008D                      l718 007F                      l680 00F0  
                    l672 00E2                      l752 00DD                      l744 00C6  
                    l736 00A6                      l728 0091                      l760 015C  
                    l690 0105                      l682 00F4                      l674 00E5  
                    l746 00CD                      l738 00AA                      l770 017E  
                    l762 015E                      l692 0108                      l684 00F9  
                    l676 00E9                      l748 00D3                      l780 0193  
                    l772 017F                      l764 0162                      l756 0153  
                    l694 010F                      l686 00FD                      l678 00EE  
                    l790 01E0                      l782 01AF                      l774 0189  
                    l766 0169                      l758 0159                      l696 0113  
                    l688 00FF                      l792 01F3                      l784 01C2  
                    l776 018A                      l768 017D                      l698 0117  
                    l794 01F4                      l786 01C3                      l778 018C  
                    l796 01F5                      l788 01C4                      _RA0 0028  
                    _RA1 0029                      _RA2 002A                      _RA3 002B  
                    u300 0144                      u220 00E9                      u301 0143  
                    u221 00E8                      u310 0149                      u230 00F4  
                    u311 0148                      u231 00F3                      u240 0105  
                    u400 00D8                      u320 0086                      u241 0104  
                    u401 00D7                      u321 0085                      u330 0091  
                    u410 0162                      u331 0090                      u411 0161  
                    u260 0117                      u340 009C                      u261 0116  
                    u341 009B                      u255 010A                      u280 012C  
                    u360 00AE                      u281 012B                      u361 00AD  
                    u425 016F                      u370 00BC                      u275 0119  
                    u371 00BB                      u355 00A1                      u285 0128  
                    u390 00D3                      u295 0139                      u391 00D2  
                    u375 00B8                      u385 00C8                      fsr0 0004  
                    indf 0000             ___awmod@sign 0015                     _main 0153  
                   btemp 0008                     start 0000                    ?_main 0010  
        __end_of___awdiv 0153          __end_of___awmod 00E2          ___awdiv@divisor 0010  
        ___awdiv@counter 0014                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _TRISA 0005                    _TRISB 0006  
                  _TRISC 0007                    main@t 0018                    ltemp0 0008  
                  ltemp1 000C                    ltemp3 000A                    ttemp0 0008  
                  ttemp1 000B                    status 0003                    wtemp0 0008  
                  wtemp1 000A                    wtemp2 000C                    wtemp3 000E  
        __initialization 0003             __end_of_main 0200                   ??_main 0000  
       ___awdiv@dividend 0012                ??___awdiv 0000                ??___awmod 0000  
                 _digits 0030         ___awdiv@quotient 0016          ___awmod@divisor 0010  
        ___awmod@counter 0014  __end_of__initialization 0064           __pcstackCOMMON 0000  
           __pidataBANK1 0068               __pmaintext 0153                  ___awdiv 00E2  
                ___awmod 007F                  __ptext1 007F                  __ptext2 00E2  
       ___awmod@dividend 0012     end_of_initialization 0064      start_initialization 0003  
            __pdataBANK1 0030                ___latbits 0002            __pcstackBANK0 0010  
              __pjmp_tab 0078                 ?___awdiv 0010                 ?___awmod 0010  
       __size_of___awdiv 0071         __size_of___awmod 0063            entry____awdiv 007B  
          entry____awmod 0078            __size_of_main 00AD  
